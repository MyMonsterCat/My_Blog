const e=JSON.parse('{"key":"v-14248ea4","path":"/java/senior/jvm/gc.html","title":"垃圾回收相关知识","lang":"zh-CN","frontmatter":{"title":"垃圾回收相关知识","category":"Java","tag":["Java","JVM"],"order":3,"comment":false,"description":"1.如何判断对象可以回收 引用计数法 优点: 原理简单，判断效率高 其效率高体现在 - 回收没有延迟性，无需等到内存不够的时候才开始回收，运行时根据对象计数器是否为 0，可以直接回收 - 在垃圾回收过程中，应用无需挂起；如果申请内存时，内存不足，则立刻报 OOM 错误 - 区域性，更新对象的计数器时，只是影响到该对象，不会扫描全部对象 弊端: 循环引用...","head":[["meta",{"property":"og:url","content":"https://monstercat.cn/java/senior/jvm/gc.html"}],["meta",{"property":"og:site_name","content":"MonsterCat"}],["meta",{"property":"og:title","content":"垃圾回收相关知识"}],["meta",{"property":"og:description","content":"1.如何判断对象可以回收 引用计数法 优点: 原理简单，判断效率高 其效率高体现在 - 回收没有延迟性，无需等到内存不够的时候才开始回收，运行时根据对象计数器是否为 0，可以直接回收 - 在垃圾回收过程中，应用无需挂起；如果申请内存时，内存不足，则立刻报 OOM 错误 - 区域性，更新对象的计数器时，只是影响到该对象，不会扫描全部对象 弊端: 循环引用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-08T09:22:40.000Z"}],["meta",{"property":"article:author","content":"Monster"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:modified_time","content":"2023-04-08T09:22:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"垃圾回收相关知识\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-08T09:22:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Monster\\",\\"url\\":\\"https://monstercat.cn\\",\\"email\\":\\"1264833435@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"1.如何判断对象可以回收","slug":"_1-如何判断对象可以回收","link":"#_1-如何判断对象可以回收","children":[{"level":3,"title":"引用计数法","slug":"引用计数法","link":"#引用计数法","children":[]},{"level":3,"title":"可达性分析算法","slug":"可达性分析算法","link":"#可达性分析算法","children":[]}]},{"level":2,"title":"2.引用类型","slug":"_2-引用类型","link":"#_2-引用类型","children":[{"level":3,"title":"强引用","slug":"强引用","link":"#强引用","children":[]},{"level":3,"title":"软引用","slug":"软引用","link":"#软引用","children":[]},{"level":3,"title":"弱引用","slug":"弱引用","link":"#弱引用","children":[]},{"level":3,"title":"虚引用","slug":"虚引用","link":"#虚引用","children":[]},{"level":3,"title":"终结器引用","slug":"终结器引用","link":"#终结器引用","children":[]}]},{"level":2,"title":"3.垃圾回收算法","slug":"_3-垃圾回收算法","link":"#_3-垃圾回收算法","children":[{"level":3,"title":"理论：分代收集","slug":"理论-分代收集","link":"#理论-分代收集","children":[]},{"level":3,"title":"三种回收算法的对比","slug":"三种回收算法的对比","link":"#三种回收算法的对比","children":[]},{"level":3,"title":"标记-清除","slug":"标记-清除","link":"#标记-清除","children":[]},{"level":3,"title":"标记-整理","slug":"标记-整理","link":"#标记-整理","children":[]},{"level":3,"title":"标记-复制","slug":"标记-复制","link":"#标记-复制","children":[]}]},{"level":2,"title":"4.HotSpot算法细节","slug":"_4-hotspot算法细节","link":"#_4-hotspot算法细节","children":[]}],"git":{"createdTime":1680166361000,"updatedTime":1680945760000,"contributors":[{"name":"Monster","email":"1264833435@qq.com","commits":2}]},"readingTime":{"minutes":7.42,"words":2225},"filePathRelative":"java/senior/jvm/gc.md","localizedDate":"2023年3月30日","autoDesc":true,"excerpt":""}');export{e as data};
